name: Qase Run Create - Patch Validation


on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Provide the versions (comma-separated)'
        required: true
        default: 'v1.29.0, v1.30.0, v1.31.0, v1.32.0'

      rcs:
        description: 'Provide the list of RCs to run (comma-separated)'
        required: true
        default: 'v1.29.0-rc1, v1.30.0-rc1, v1.31.0-rc1, v1.32.0-rc1'

jobs:
  create_qase_run:
    name: 'Create Qase Run'
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/qase'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Execute Permission for Scripts
        run: chmod +x ./scripts/qase-run.sh

      - name: Process Versions and RCs
        id: process_inputs
        shell: bash
        run: |
            versions="${{ github.event.inputs.versions }}"
            rcs="${{ github.event.inputs.rcs }}"
            
            IFS=',' read -r -a version_array <<< "$versions"
            IFS=',' read -r -a rc_array <<< "$rcs"
            
            if [ "${#version_array[@]}" -ne "${#rc_array[@]}" ]; then
              echo "Error: Number of versions and RCs do not match."
              exit 1
            fi
            
            echo "Number of versions: ${#version_array[@]}"
            
            # Export arrays for use in subsequent steps
            echo "VERSION_ARRAY<<EOF" >> $GITHUB_ENV
            printf "%s\n" "${version_array[@]}" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            
            echo "RC_ARRAY<<EOF" >> $GITHUB_ENV
            printf "%s\n" "${rc_array[@]}" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

      - name: Loop Over Versions and RCs
        shell: bash
        env:
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          VERSION_ARRAY: ${{ env.VERSION_ARRAY }}
          RC_ARRAY: ${{ env.RC_ARRAY }}
        run: |
          CURRENT_MONTH=$(date +"%B")
          CURRENT_YEAR=$(date +"%Y")

          
          mapfile -t version_array <<< "$VERSION_ARRAY"
          mapfile -t rc_array <<< "$RC_ARRAY"

          for ((i=0; i<${#version_array[@]}; i++)); do
            VERSION="${version_array[$i]}"
            RC="${rc_array[$i]}"

            TITLE="Patch Validation for RKE2 and K3S - $CURRENT_MONTH $CURRENT_YEAR for $VERSION"
            DESCRIPTION="rc Version: $RC"
            MILESTONE="$CURRENT_YEAR-$CURRENT_MONTH Patch release"

            echo "Creating Qase Test Run with:"
            echo "Title: $TITLE"
            echo "Description: $DESCRIPTION"
            echo "Milestone: $MILESTONE"

            ./scripts/qase-run.sh \
              --token "$QASE_API_TOKEN" \
              --title "$TITLE" \
              --description "$DESCRIPTION" \
              --milestone "$MILESTONE"
          done
              
 

  #          TITLE="Patch Validation for RKE2 and K3S - $CURRENT_MONTH $CURRENT_YEAR for ${{ github.event.inputs.version }}"
#          DESCRIPTION="rc Version: ${{ github.event.inputs.rcs }}"
#          MILESTONE="$CURRENT_YEAR-$CURRENT_MONTH Patch release"



