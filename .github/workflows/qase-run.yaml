name: Qase Run Create
on:
  workflow_dispatch:
    inputs:
      versions:
        description: 'Provide the versions'
        required: true
        default: 'v1.29.0,v1.30.0,v1.31.0,v1.32.0'
      rcs:
        description: 'Provide the list of RCs to run'
        required: true
        default: 'v1.29.0-rc1,v1.30.0-rc1,v1.31.0-rc1,v1.32.0-rc1'

permissions:
  contents: read

jobs:
  create_qase_run:
    name: 'Create Qase Run'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout distros
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Perm for Script
        run: chmod +x ./scripts/qase-run.sh

      - name: Create Qase Milestone
        id: qase-milestone
        shell: bash
        env:
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_PROJECT_CODE: 'K3SRKE2'
        run: |
         CURRENT_MONTH=$(date +"%B")
         CURRENT_YEAR=$(date +"%Y")

         echo $CURRENT_MONTH >> $GITHUB_ENV
         echo $CURRENT_YEAR >> $GITHUB_ENV

         MILESTONE="$CURRENT_YEAR-$CURRENT_MONTH Patch release"
         echo $MILESTONE >> $GITHUB_ENV
         echo "Creating milestone: $MILESTONE"
         
            MILESTONE_RESPONSE=$(curl --request POST \
                --url "https://api.qase.io/v1/milestone/$QASE_PROJECT_CODE" \
                --header "Token: $QASE_API_TOKEN" \
                --header 'Content-Type: application/json' \
                --data '{
                    "title": "'"$MILESTONE"'"
                }' \
                --silent)

                MILESTONE_ID=$(echo "$MILESTONE_RESPONSE" | jq '.result.id')
                  if [[ -z "$MILESTONE_ID" || "$MILESTONE_ID" == "null" ]]; then
                      echo "Failed to create milestone, seting default to current date."
                      export MILESTONE_ID=23  
                  fi
          echo  $MILESTONE_ID >> $GITHUB_ENV

      - name: Process Versions and RCs
        id: process-versions-rcs
        shell: bash
        run: |
            versions="${{ github.event.inputs.versions }}"
            rcs="${{ github.event.inputs.rcs }}"

            IFS=',' read -r -a versions_to_process <<< "$versions"
            IFS=',' read -r -a rcs_to_process <<< "$rcs"

            if [ "${#versions_to_process[@]}" -ne "${#rcs_to_process[@]}" ]; then
              echo "Error: Number of versions and RCs do not match."
              exit 1
            fi

            echo "Number of versions: ${#versions_to_process[@]}"
            echo "Number of RCs: ${#rcs_to_process[@]}"

            echo "VERSIONS<<EOF" >> $GITHUB_ENV
            printf "%s\n" "${versions_to_process[@]}" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

            echo "RCS<<EOF" >> $GITHUB_ENV
            printf "%s\n" "${rcs_to_process[@]}" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

      - name: Qase Run Script
        id: qase-run-script
        shell: bash
        env:
          CURRENT_MONTH: ${{ env.CURRENT_MONTH }}
          CURRENT_YEAR: ${{ env.CURRENT_YEAR }}
          MILESTONE: ${{ env.MILESTONE }}
          MILESTONE_ID: ${{ env.MILESTONE_ID }}
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          VERSIONS: ${{ env.VERSIONS }}
          RCs: ${{ env.RCS }}
        run: |
          mapfile -t versions <<< "$VERSIONS"
          mapfile -t rcs <<< "$RCS"

          export MILESTONE_ID=${{ env.MILESTONE_ID }}
          export QASE_API_TOKEN=${{ env.QASE_API_TOKEN }}
          
          for ((i=0; i<${#versions[@]}; i++)); do
            VERSION="${versions[$i]}"
            RC="${rcs[$i]}"

            export TITLE="Patch Validation for RKE2 and K3S -${{ env.CURRENT_MONTH }}-${{ env.CURRENT_YEAR }} - $VERSION"
            export DESCRIPTION="rc Version: $RC"
             

            echo "Creating Qase Test Run with:"
            echo "Title: $TITLE"
            echo "Description: $DESCRIPTION"
            echo "Milestone:  $MILESTONE_ID"
 
              ./scripts/qase-run.sh "$QASE_API_TOKEN" "$TITLE" "$DESCRIPTION" "$MILESTONE_ID"
          done



 